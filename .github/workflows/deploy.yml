name: Deploy++, Version++

on:
    push:
        branches:
            - main
    workflow_dispatch:

# bump version, [deploy backend, deploy frontend]
# TODO: clear cf cache once deployment completes
jobs:
    bump-version:
        name: Bump versions
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Increment package.json versions
              run: |
                # increment package.json version in given path
                bump_version () {
                  FILE=$1
                  jq '.version |= (tonumber + 1 | tostring)' "$FILE" > package.tmp.json && mv package.tmp.json "$FILE"
                }
      
                bump_version frontend/package.json
                bump_version backend/package.json

            - name: Commit and push changes
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add frontend/package.json
                  git add backend/package.json
                  git commit -m "v$(jq -r .version frontend/package.json)"
                  git push

    deploy-backend:
        needs: bump-version
        name: Deploy Backend
        runs-on: ubuntu-latest
        container:
            image: node:22
        steps:
            - uses: actions/checkout@v3
            - name: Get SSH key and set permissions
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_USERAPI_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
            - name: Copy repo with SCP
              run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./backend/* ${{ secrets.SSH_USERAPI }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERAPI }}${{ secrets.SSH_USERAPI_DOMAINPATH }}
            - name: Install & Prune dependencies
              run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USERAPI }}@${{ secrets.SSH_HOST }} "cd /home/${{ secrets.SSH_USERAPI }}${{ secrets.SSH_USERAPI_DOMAINPATH }} && pnpm install && pnpm prune"
            - name: Compile TypeScript files
              run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USERAPI }}@${{ secrets.SSH_HOST }} "cd /home/${{ secrets.SSH_USERAPI }}${{ secrets.SSH_USERAPI_DOMAINPATH }} && pnpm run compile"
            - name: Restart pm2 process
              run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USERAPI }}@${{ secrets.SSH_HOST }} "cd /home/${{ secrets.SSH_USERAPI }}${{ secrets.SSH_USERAPI_DOMAINPATH }} && pm2 kill && pm2 start dist/index.js"

    deploy-frontend:
        needs: bump-version
        name: Deploy Frontend
        runs-on: ubuntu-latest
        container:
            image: node:22
        steps:
            - uses: actions/checkout@v3
            - name: Get SSH key and set permissions
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_USERSTATIC_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
            - name: Copy repo with SCP
              run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./frontend/* ${{ secrets.SSH_USERSTATIC }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERSTATIC }}${{ secrets.SSH_USERSTATIC_DOMAINPATH }}
            - name: Build at root using webpack
              run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USERSTATIC }}@${{ secrets.SSH_HOST }} "cd /home/${{ secrets.SSH_USERSTATIC }}${{ secrets.SSH_USERSTATIC_DOMAINPATH }} && pnpm install && pnpm run build && pnpm prune"
